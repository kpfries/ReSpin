[gd_scene load_steps=10 format=2]

[sub_resource type="PlaneMesh" id=1]

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "vertex"

[sub_resource type="Gradient" id=3]

[sub_resource type="GradientTexture" id=4]
gradient = SubResource( 3 )

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = SubResource( 4 )

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=7]

[sub_resource type="VisualShader" id=8]
code = "shader_type spatial;
uniform sampler2D tex_vtx_3;


void vertex() {
// Input:4
	vec3 n_out4p0;
	n_out4p0 = vec3(UV,0.0);

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	vec4 tex_vtx_3_read = texture( tex_vtx_3 , n_out4p0.xy );
	n_out3p0 = tex_vtx_3_read.rgb;
	n_out3p1 = tex_vtx_3_read.a;

// Input:2
	vec3 n_out2p0;
	n_out2p0 = VERTEX;

// VectorOp:5
	vec3 n_out5p0;
	n_out5p0 = n_out3p0 + n_out2p0;

// Output:0
	VERTEX = n_out5p0;

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -689, 77 )
nodes/vertex/2/node = SubResource( 2 )
nodes/vertex/2/position = Vector2( -420, 340 )
nodes/vertex/3/node = SubResource( 5 )
nodes/vertex/3/position = Vector2( -440, 140 )
nodes/vertex/4/node = SubResource( 6 )
nodes/vertex/4/position = Vector2( -600, 160 )
nodes/vertex/5/node = SubResource( 7 )
nodes/vertex/5/position = Vector2( 0, 240 )
nodes/vertex/connections = PoolIntArray( 4, 0, 3, 0, 3, 0, 5, 0, 2, 0, 5, 1, 5, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )

[node name="MeshInstance" type="MeshInstance"]
mesh = SubResource( 1 )
material/0 = SubResource( 9 )
